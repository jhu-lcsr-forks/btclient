#This is an example WAM configuration file

system{
    busCount = 1
    bus[]{
        type = "CAN"                # Type of bus
        device = "/dev/can0"        # Communication device (not used)
        address = 0                 # This is the CAN port
        name = "SINGLE"               # Name of the robot
    }
    bus[]{
        type = "Ethernet"           # Type of bus
        device = "eth0"             # Communication device
        address = "192.168.139.65"  # Address of robot
        name = "EtherWAM"           # Name of the robot
    }
}

SINGLE{
    name = "Single motor" # Cool name
    dof = 1                         # Degrees of freedom
    home = < 0.0>  # Home position of each joint (rad)
    tlimit = <15.0>

    # World -> Base frame transform
    world = << 1, 0, 0 >,
             < 0, 1, 0 >,
             < 0, 0, 1 >>

    # world = <<1,0,0>,<0,-1,0>,<0,0,-1>> # World -> Base frame transform (upside down)
    # world = <<0,0,1>,<0,1,0>,<1,0,0>> # World -> Base frame transform
    # world = <<0.5, 0.0, 0.5>,<0,1,0>,<-0.5, 0.0, 0.5>> # World -> Base frame transform
    tool = <<1,2,3,3>,<1,2,3,3>,<1,2,3,3>> # Lastframe -> Toolframe transform

    Px_pdi = <2000.0, 5.0, 0.0> #  X Cartesian position control gains (p, d, i)
    Py_pdi = <2000.0, 5.0, 0.0> #  Y Cartesian position control gains (p, d, i)
    Pz_pdi = <2000.0, 5.0, 0.0> #  Z Cartesian position control gains (p, d, i)
    Rx_pd = <0.0, 0.0>        # Rx Cartesian rotation control gains (p, d)
    Ry_pd = <0.0, 0.0>        # Ry Cartesian rotation control gains (p, d)
    Rz_pd = <0.0, 0.0>        # Rz Cartesian rotation control gains (p, d)

    safety{
        tipFaultVel = 2.0   # Endtip velocity fault threshold (m/s)
        tipWarnVel = 0.5    # Endtip velocity warning threshold (m/s)
        faultTrq = 8.4      # Motor torque fault threshold (Nm)
        warnTrq = 5.0       # Motor torque warning threshold (Nm)
    }

    # Transmission ratios
    N = <1>
    n = <0>

    # Motor to Joint transform matrices (pre-2007)
    #m2jp = <<-.0238095,0,0,0,0,0,0>,<0,.017699,-.017699,0,0,0,0>,<0,-.0297345,-.0297345,0,0,0,0>,<0,0,0,.0555556,0,0,0>,<0,0,0,0,.0486855,.0486855,0>,<0,0,0,0,-.0486855,.0486855,0>,<0,0,0,0,0,0,-.0669792>>
    #j2mt = <<-.0238095,0,0,0,0,0,0>,<0,.017699,-.0297345,0,0,0,0>,<0,-.017699,-.0297345,0,0,0,0>,<0,0,0,.0555556,0,0,0>,<0,0,0,0,.0486855,-.0486855,0>,<0,0,0,0,.0486855,.0486855,0>,<0,0,0,0,0,0,-.0669792>>

    # Motor to Joint transform matrices (2007, M4 reversed)
    m2jp = << 1 >>

    j2mp = << 1 >>

    j2mt = << 1 >>

    link[]{
        name = "Motor"

        # Denavit-Hartenberg parameters (Spong)
        # Defines the transformation from the previous frame to this link's frame
        dh{
            theta = 0.0 # (multiplied by pi)
            d = 0.0
            a = 0.0
            alpha = -0.5 # (multiplied by pi)
        }

        # Mass of this link (kg)
        mass = 1.0

        # Center of mass (m), xyz translation from this link's frame
        com = <0.0, 0.0, 0.0>

        # Inertial matrix, chosen at this link's frame
        #I = <<242919.8516E-6,636.5542E-6,-93.1687E-6>,<636.5542E-6,92036.7003E-6,-262.6549E-6>,<-93.1687E-6,-262.6542E-6,207050.7372E-6>>

        # Inertial matrix, chosen at this link's center of mass
        I = << 1, 0, 0 >,
             < 0, 1, 0 >,
             < 0, 0, 1 >>

        # Rotor inertia <Lxx, Lyy, Lzz>
        rotorI = <0.0, 0.201, 0.0>

        vel = 0.5                       # Default velocity
        acc = 0.5                       # Default acceleration

        pid{ # PID control parameters
            kp = 900
            ki = 2.5
            kd = 10
            max = 8191 # abs(jointTorque) is bounded to this value
        }
    }

    link[]{
        name = "Tool"

        # Denavit-Hartenberg parameters (Spong)
        # Defines the transformation from the previous frame to this link's frame
        dh{
            theta = 0.0 # (multiplied by pi)
            #d = 0.450 # Haptic ball
            #d = 0.440 # BarrettHand
            d = 0.350 # Blank Link (no tool)
            a = 0.0
            alpha = 0.0 # (multiplied by pi)
        }

        #mass = 0.3460 # Haptic ball
        #mass = 1.16477 # Trocar tool?
        #mass = 1.2 # BarrettHand
        mass = 0.0 # No tool

        # Center of mass (m), xyz translation from the tool frame
        #com = <0.0, 0.0, -0.08> # Haptic ball
        #com = <0.0, 0.0, -0.04> # BarrettHand
        com = <0.0, 0.0, 0.0> # No tool

        # Inertial matrix, chosen at this link's frame
        #I = <<0.0, 0.0, 0.0>,<0.0, 0.0, 0.0>,<0.0, 0.0, 0.0>>

        # Inertial matrix, chosen at this link's center of mass
        I = <<0.0, 0.0, 0.0>,<0.0, 0.0, 0.0>,<0.0, 0.0, 0.0>>

    }
}
